[{"/home/salman/Desktop/React_Projects/routertask/src/index.js":"1","/home/salman/Desktop/React_Projects/routertask/src/App.js":"2","/home/salman/Desktop/React_Projects/routertask/src/reportWebVitals.js":"3","/home/salman/Desktop/React_Projects/routertask/src/Comps/AddItems.js":"4","/home/salman/Desktop/React_Projects/routertask/src/Comps/Home.js":"5","/home/salman/Desktop/React_Projects/routertask/src/Comps/Details.js":"6","/home/salman/Desktop/React_Projects/routertask/src/Comps/Edit.js":"7","/home/salman/Desktop/React_Projects/routertask/src/Comps/firebase.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":1440,"mtime":1613060170499,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":3452,"mtime":1613059257899,"results":"13","hashOfConfig":"10"},{"size":2234,"mtime":1613055327142,"results":"14","hashOfConfig":"10"},{"size":1474,"mtime":1612961429740,"results":"15","hashOfConfig":"10"},{"size":3564,"mtime":1613059856776,"results":"16","hashOfConfig":"10"},{"size":518,"mtime":1612789782000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"thgsee",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/salman/Desktop/React_Projects/routertask/src/index.js",[],["37","38"],"/home/salman/Desktop/React_Projects/routertask/src/App.js",[],"/home/salman/Desktop/React_Projects/routertask/src/reportWebVitals.js",[],"/home/salman/Desktop/React_Projects/routertask/src/Comps/AddItems.js",["39"],"import React, { useState} from 'react';\r\nimport '../App.css';\r\nimport firebase from './firebase'\r\nimport {useHistory} from \"react-router-dom\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input: {\r\n      display: 'none',\r\n    },\r\n  }));\r\n\r\nfunction AddItems(props) {\r\n    let history = useHistory();\r\n    let storage = firebase.storage();\r\n    \r\n    let [values, setValues]= useState({});\r\n    let [image, setImage]=useState(null);\r\n\r\n    const handleChangeImage=(e)=>{\r\n      if(e.target.files[0]){\r\n        setImage(e.target.files[0]);\r\n      }\r\n    }\r\n\r\n    const handleSubmit=()=>{\r\n      //  localStorage.setItem('myArray', JSON.stringify([...props.items, {...values}]));\r\n\r\n      const uploadTask = storage.ref(`images/${image.name}`).put(image);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        snapshot => {},\r\n        error=>{\r\n          console.log(error);\r\n        },\r\n        ()=>{\r\n          storage\r\n          .ref(\"images\")\r\n          .child(image.name)\r\n          .getDownloadURL()\r\n          .then(url =>{\r\n            firebase.database().ref(\"task\")\r\n            .push({...values, url})\r\n            //\r\n            props.itemsList([...props.items, {...values,url , id:firebase.database().ref(\"task\").child}]);\r\n          })\r\n        }\r\n      )\r\n      history.push('/');\r\n    }\r\n    \r\n    const classes = useStyles();\r\n    return (\r\n\r\n    <div className=\"addItems\">\r\n       <h1>Create Task</h1>\r\n        \r\n        <Button className=\"backBTN\" onClick={()=> history.push('/')}\r\n        variant=\"contained\" startIcon={<KeyboardBackspaceIcon />}> Back\r\n        </Button>\r\n\r\n        <div className=\"fields\">\r\n        <TextField id=\"standard-basic\" label=\"Add Title\" required\r\n        className=\"inputTitle\" value={values.title}\r\n        onChange={(event) => {setValues({...values, title: event.target.value})}}/>\r\n        \r\n        <br />\r\n\r\n        <TextField\r\n        className=\"inputDate\"\r\n        id=\"date\" required\r\n        label=\"Add Date\"\r\n        type=\"date\"\r\n        InputLabelProps={{shrink: true}}\r\n        className=\"inputDate\"\r\n        value={values.date} \r\n        onChange={(event) => {\r\n        setValues({...values, date: event.target.value})}}/>\r\n\r\n            <br />\r\n\r\n        <TextField\r\n        className=\"inputdes\" value={values.descrp} type=\"text\" required\r\n        onChange={(event) => {setValues({...values, descrp: event.target.value})}}\r\n        id=\"outlined-multiline-static\"\r\n        label=\"Add Descriptions\" multiline rows={5} variant=\"outlined\"/>\r\n    </div>\r\n\r\n      <div className=\"formBTN\">\r\n      <input accept=\"image/*\" type=\"file\" required\r\n      onChange={handleChangeImage}\r\n      className={classes.input} id=\"contained-button-file\" multiple/>\r\n     <label htmlFor=\"contained-button-file\">\r\n         <Button variant=\"contained\" color=\"primary\" component=\"span\" startIcon={<PhotoCamera/>}>\r\n           Upload\r\n        </Button>\r\n      </label>\r\n        <Button variant=\"contained\" color=\"primary\" startIcon={<SaveIcon/>} \r\n        onClick={()=>handleSubmit()}>Submit</Button>\r\n      </div>\r\n    </div>\r\n\r\n    );\r\n}\r\n\r\nexport default AddItems;\r\n","/home/salman/Desktop/React_Projects/routertask/src/Comps/Home.js",[],"/home/salman/Desktop/React_Projects/routertask/src/Comps/Details.js",["40","41"],"import React from 'react';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\nimport Button from '@material-ui/core/Button';\nimport '../App.css';\n\n\nfunction Details(props) {\n    \n    const history = useHistory();\n    let path = useParams();\n\n    return (\n            <div className=\"Details\">\n                <h1>Details Page</h1>\n                <br/>\n                <Button onClick={()=>history.push('/')}\n                    variant=\"contained\"\n                    startIcon={<KeyboardBackspaceIcon />}>\n                    Back\n                </Button>\n\n                <div className=\"details-card\">\n                {props.items.filter(item => item.id == path.id).map(filtereditem => (\n                <>\n                     <h2>\n                    Title :\n                      {filtereditem.title}\n                    </h2>\n                    <h2>\n                        Date :\n                        {filtereditem.date}\n                    </h2>\n                    <h2>\n                        Description :\n                        {filtereditem.descrp}\n                    </h2>\n                    {/* {console.log(\"ITEM\",filtereditem.url)} */}\n                    <img src={filtereditem.url} alt=\"image\" width=\"400\" height=\"300\"/> \n                     </>\n                ))}\n\n                </div>\n                     \n            </div>\n    )\n}\n\nexport default Details\n","/home/salman/Desktop/React_Projects/routertask/src/Comps/Edit.js",["42","43"],"/home/salman/Desktop/React_Projects/routertask/src/Comps/firebase.js",[],{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":80,"column":9,"nodeType":"50","endLine":80,"endColumn":30},{"ruleId":"51","severity":1,"message":"52","line":24,"column":53,"nodeType":"53","messageId":"54","endLine":24,"endColumn":55},{"ruleId":"55","severity":1,"message":"56","line":39,"column":21,"nodeType":"57","endLine":39,"endColumn":87},{"ruleId":"58","severity":1,"message":"59","line":46,"column":20,"nodeType":"60","messageId":"61","endLine":46,"endColumn":26},{"ruleId":"48","severity":1,"message":"49","line":81,"column":9,"nodeType":"50","endLine":81,"endColumn":30},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-unused-vars","'newURL' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]