[{"/home/salman/Desktop/React_Projects/routertask/src/index.js":"1","/home/salman/Desktop/React_Projects/routertask/src/App.js":"2","/home/salman/Desktop/React_Projects/routertask/src/reportWebVitals.js":"3","/home/salman/Desktop/React_Projects/routertask/src/Comps/AddItems.js":"4","/home/salman/Desktop/React_Projects/routertask/src/Comps/Home.js":"5","/home/salman/Desktop/React_Projects/routertask/src/Comps/Details.js":"6","/home/salman/Desktop/React_Projects/routertask/src/Comps/Edit.js":"7","/home/salman/Desktop/React_Projects/routertask/src/Comps/firebase.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":1250,"mtime":1612793133313,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"12","hashOfConfig":"10"},{"size":2899,"mtime":1612792722787,"results":"13","hashOfConfig":"10"},{"size":2227,"mtime":1612792715075,"results":"14","hashOfConfig":"10"},{"size":1416,"mtime":1612794157729,"results":"15","hashOfConfig":"10"},{"size":2913,"mtime":1612792709675,"results":"16","hashOfConfig":"10"},{"size":518,"mtime":1612789782000,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"thgsee",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/salman/Desktop/React_Projects/routertask/src/index.js",[],["38","39"],"/home/salman/Desktop/React_Projects/routertask/src/App.js",[],"/home/salman/Desktop/React_Projects/routertask/src/reportWebVitals.js",[],"/home/salman/Desktop/React_Projects/routertask/src/Comps/AddItems.js",["40","41"],"import React, { useState, useEffect } from 'react';\r\nimport '../App.css';\r\nimport firebase from './firebase'\r\nimport {useHistory} from \"react-router-dom\";\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport KeyboardBackspaceIcon from '@material-ui/icons/KeyboardBackspace';\r\nimport Button from '@material-ui/core/Button';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    input: {\r\n      display: 'none',\r\n    },\r\n  }));\r\n\r\nfunction AddItems(props) {\r\n    let history = useHistory();\r\n\r\n    const [values, setValues]= useState({});\r\n    \r\n    const handleSubmit=()=>{\r\n    \r\n      //  localStorage.setItem('myArray', JSON.stringify([...props.items, {...values}]));\r\n      \r\n      props.itemsList([...props.items, {...values, id:Math.floor(Math.random() * 100)}]);      \r\n      firebase.database().ref('/')\r\n      .set([...props.items,{...values}])\r\n      \r\n      history.push('/');\r\n     \r\n    }\r\n  \r\n    const classes = useStyles();\r\n    \r\n      \r\n    return (\r\n\r\n    <div className=\"addItems\">\r\n       <h1>Create Task</h1>\r\n        \r\n        <Button className=\"backBTN\" onClick={()=> history.push('/')}\r\n        variant=\"contained\" startIcon={<KeyboardBackspaceIcon />}> Back\r\n        </Button>\r\n\r\n        <div className=\"fields\">\r\n        <TextField id=\"standard-basic\" label=\"Add Title\" \r\n        className=\"inputTitle\" value={values.title}\r\n        onChange={(event) => {setValues({...values, title: event.target.value})}}/>\r\n        \r\n        <br />\r\n\r\n        <TextField\r\n        className=\"inputDate\"\r\n        id=\"date\"\r\n        label=\"Add Date\"\r\n        type=\"date\"\r\n        InputLabelProps={{shrink: true}}\r\n        className=\"inputDate\"\r\n        value={values.date} \r\n        onChange={(event) => {\r\n        setValues({...values, date: event.target.value})}}/>\r\n\r\n            <br />\r\n\r\n        <TextField\r\n        className=\"inputdes\" value={values.descrp} type=\"text\"\r\n        onChange={(event) => {setValues({...values, descrp: event.target.value})}}\r\n        id=\"outlined-multiline-static\"\r\n        label=\"Add Descriptions\" multiline rows={5} variant=\"outlined\"/>\r\n</div>\r\n\r\n        <div className=\"formBTN\">\r\n        <input accept=\"image/*\"\r\n        onChange={(event)=>{setValues({...values, img: event.target.files[0]})} }\r\n        className={classes.input} id=\"contained-button-file\" multiple type=\"file\"/>\r\n\r\n      <label htmlFor=\"contained-button-file\">\r\n        <Button variant=\"contained\" color=\"primary\" component=\"span\" startIcon={<PhotoCamera/>}>\r\n          Upload\r\n        </Button>\r\n      </label>\r\n        <Button variant=\"contained\" color=\"primary\" startIcon={<SaveIcon/>} \r\n        onClick={()=>handleSubmit()}>Submit</Button>\r\n      </div>\r\n    </div>\r\n\r\n    );\r\n}\r\n\r\nexport default AddItems;\r\n","/home/salman/Desktop/React_Projects/routertask/src/Comps/Home.js",["42"],"import React, {useEffect} from 'react';\r\nimport '../App.css';\r\nimport firebase from './firebase'\r\nimport {useHistory, Link} from \"react-router-dom\";\r\nimport Button from '@material-ui/core/Button';\r\nimport CreateIcon from '@material-ui/icons/Create';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n\r\nfunction Home(props) {\r\n    let history = useHistory();\r\n    const handleDelete =(item, index)=>{\r\n   \r\n      const delArra =   props.items.filter((itemVal, id) =>  id !== index);\r\n      firebase.database().ref('/')\r\n      .set(delArra)\r\n\r\n      // localStorage.setItem('myArray', JSON.stringify(delArra))\r\n      \r\n      props.itemsList(delArra)\r\n    }\r\n    \r\n    const handleEdit=(item)=>{\r\n        history.push('/edit',{\r\n          item\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"HomePage\">\r\n        <h1>Home Page</h1>\r\n\r\n        <Button onClick={()=> history.push('/form')}\r\n        variant=\"contained\"\r\n        color=\"primary\">\r\n          Create Task\r\n          </Button>\r\n          <div className=\"cardClass\">\r\n            {props.items.map((item, index)=>\r\n              <>\r\n              <table className=\"table\">\r\n                <thead>\r\n                <tr className=\"tableheadrow\">\r\n                <th className=\"tableDATA\">Name</th>\r\n                <th className=\"tableDATA\">Date</th>\r\n                <th className=\"tableDATA\">Action</th>\r\n              </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr key={index} className=\"tablerow\">\r\n                <td><Link className=\"links\">{item.title}</Link></td>\r\n                <td><Link className=\"links\" >{item.date}</Link></td>\r\n              <td>\r\n              <CreateIcon className=\"actions\" onClick={() => handleEdit(item)} />\r\n             <DeleteIcon className=\"actions\" onClick={()=>handleDelete(item, index)} />\r\n             <ArrowForwardIosIcon className=\"actions\" onClick={()=>history.push(`/details/${item.id}`)}/>   \r\n              </td>\r\n              </tr>\r\n          </tbody>\r\n        </table>\r\n       \r\n              </>\r\n              )} \r\n            </div>\r\n          \r\n         </div>\r\n    )\r\n}\r\nexport default Home;\r\n","/home/salman/Desktop/React_Projects/routertask/src/Comps/Details.js",["43"],"/home/salman/Desktop/React_Projects/routertask/src/Comps/Edit.js",["44","45"],"import React, {useState} from 'react';\nimport firebase from './firebase';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PhotoCamera from '@material-ui/icons/PhotoCamera';\nimport UpdateIcon from '@material-ui/icons/Update';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport { useHistory, useLocation, useParams} from \"react-router-dom\";\nimport '../App.css';\nconst useStyles = makeStyles((theme) => ({\n    input: {\n      display: 'none',\n    },\n}));\nfunction Edit(props) {\n    let history = useHistory();\n    const location = useLocation(); \n    const selectedItem = location.state.item;\n    const [values, setValues]= useState(selectedItem);\n    \n    const handleUpdate=()=>{\n        const newValue = props.items.map((item)=> (item.id === values.id ? values : item))\n        console.log(\"newvalues\", newValue)\n        \n        firebase.database().ref('/')\n        .set(newValue)\n\n        // localStorage.setItem('myArray', JSON.stringify([...newValue]));   \n        props.itemsList([...newValue])\n    \n        history.push('/');\n}\n\n    const classes = useStyles();\n    let path = useParams();   \n    return (\n        <div className=\"addItems\">\n        <h1>Edit Form</h1>\n        \n        <div className=\"fields\">\n\n        <TextField id=\"standard-basic\" label=\"Add Title\" \n        type=\"text\"\n        className=\"inputTitle\"\n        value={values.title}\n        onChange={(event) => setValues({...values, title: event.target.value})}/>\n        <br/>\n                \n        <TextField\n        className=\"inputDate\"\n        id=\"date\"\n        label=\"Add Date\"\n        type=\"date\"\n        InputLabelProps={{\n          shrink: true,\n        }}\n        className=\"inputDate\" \n        value={values.date} \n        onChange={(event) => {\n        setValues({...values, date: event.target.value})\n        }} />\n        \n         <TextField\n            className=\"inputdes\"\n            value={values.descrp} \n            type=\"text\"\n            onChange={(event) => {setValues({...values, descrp: event.target.value})}}\n            id=\"outlined-multiline-static\" label=\"Add Descriptions\"\n            multiline rows={5} variant=\"outlined\"/>\n            \n            </div>\n            <div className=\"formBTN\">\n            <input accept=\"image/*\"\n            onChange={(event)=>{setValues({...values, img: event.target.files[0]})} }\n            className={classes.input} id=\"contained-button-file\" multiple type=\"file\"/>\n\n            <label htmlFor=\"contained-button-file\">\n            <Button variant=\"contained\" color=\"primary\" component=\"span\" \n            startIcon={<PhotoCamera/>}> Upload</Button></label>\n            <Button\n            onClick={handleUpdate}\n             variant=\"contained\"\n             color=\"primary\"\n             startIcon={<UpdateIcon/>} >Update Value</Button>\n            </div>\n        </div>\n    )\n}\nexport default Edit\n","/home/salman/Desktop/React_Projects/routertask/src/Comps/firebase.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":1,"column":27,"nodeType":"52","messageId":"53","endLine":1,"endColumn":36},{"ruleId":"54","severity":1,"message":"55","line":60,"column":9,"nodeType":"56","endLine":60,"endColumn":30},{"ruleId":"50","severity":1,"message":"51","line":1,"column":16,"nodeType":"52","messageId":"53","endLine":1,"endColumn":25},{"ruleId":"57","severity":1,"message":"58","line":23,"column":53,"nodeType":"59","messageId":"60","endLine":23,"endColumn":55},{"ruleId":"50","severity":1,"message":"61","line":35,"column":9,"nodeType":"52","messageId":"53","endLine":35,"endColumn":13},{"ruleId":"54","severity":1,"message":"55","line":57,"column":9,"nodeType":"56","endLine":57,"endColumn":30},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'path' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]